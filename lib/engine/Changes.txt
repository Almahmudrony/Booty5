v1.4
----
* Added new Actor setPositionPhysics() and setRotationPhysics() to set associated physics body position and rotation directly
* Added new utils class that contains utility functions
* Fixed actor and scene sorting using new sorting method in Utils called sortLayers()
* Added new property to TheApp called use_marm which should be set to true if deploying to mobile using the Marmalade SDK
* Added new property to Sound constructor called reuse which can be used to force the sound effect to be reused (only useful for short sound effects at may not play if one is already playing)
* Added new stop / pause methods to Sound class, only usable with reusable sounds
* Sound class will now use the powerful Marmalade audio system instead of standard, if its available
* Added new method TheApp.parseAndSetFocus(scene_name) which parses xoml JSON and sets the named scene as the current scene
* TimelineManager.add() now returns the timeline that was added
* Scene.addActor() now returns the added actor
* Actor.addActor() now returns the added actor
* TheApp.addScene() now returns the added scene
* ParticleActor.addParticle() now returns the added particle
* Main loop timer replaced with requestAnimationFrame for smoother rendering
* TheApp now measures average frame rate via avg_fps property
* TheApp has new property called adaptive_physics which will run physics update multiple times within a single frame if frame rate falls considerably outside target frame rate
* Actors can now all be cached by setting cache property to true. When cached the actor will be rendered only once to an off screen canvas, subsequent rendering will be of the cached version. note that the Size of the actor as specified by its properties will determine the size of the cached canvas area. In the case of unfilled actors, the allocated size will be slightly larger to allow for stroke thickness. Note that shadows and composite operations are not cached

v1.3.9
------
* Added support for gradients to unfilled shapes
* Removed gradient angle property and replaced with gradient start and gradient end points
* Added support for text gradients
* Moved gradient style creation out of Xoml class and into Gradient class

v1.3.8
------
* Added support for wheel joint
* Added panning property to Scene to determine when the scene is being touch panned
* Box2D begin and end contact callbacks now call both objects that were affected
* Added corner_radius property to rectActor to render rounded rects
* Added support for stroke colour and thickness to rect, arc, polygon and label actors
* Added support for scene and actor layer ordering. Set layer via _layer property and not layer variable to ensure that re-sorting takes place
* Added new shadow properties all actor types (shadow, shadow_x, shadow_y, shadow_colour, shadow_blur)
* Added support for composite operations to actors
* Added support for Scene onKeyPres, onKeyDown and onKeyUp events
* Added new demos keys, mouse joint and bitmap animation
* Added new Gradient class that handles gradient brushes
* Rect, Arc and Polygon actors can now render gradient brushes at any angle, angle is specified by new grad_rotation property

v1.3.7
------
* Updated Xoml.loadJSON() to work without JQuery
* Added support for storing concave polygons as separate convex polygons to shape
* Updated Xoml loader and Actor.addFixture() to utilise multiple convex fixtures from a single shape

v1.3.6
------
* Xoml.js now loads Actor.onLostTouchFocus event
* Fixed issue with actor clipping causing degradation and flickering
* Fixed actor origins

v1.3.4
------
* Removed CanvasActor and rolled into Actor. To give an actor a virtual canvas call makeVirtual() on the actor
* Fixed bug in App.cleanupDestroyedScenes() that was preventing removed scenes from being cleaned up
* Added new array property to Actor called anim_frames that enables specification of an array of bitmap animation frame indices
* ImageAtlas.generate() has new optional param that allows you to specify total number of frames to generate
* Geometry class has been removed and rolled into the Shape class
* Added new property to Actor called clip_shape which enables the actor and its children to clip against arbitrary shapes
* Added new property to Actor called self_clip which when set to true will clip the actor against its own clipping shape
* If ParticleActor.onParticleLost() returns false then the particle will not be destroyed
* All resources now contain parent container property
* All resources now have destroy() method that removes them from their container and destroys them
* Bitmap constructor now accepts optional 4th parameter that is a callback function that will be called when the image has been loaded
* Scene.areResourcesLoaded() added to scene which will return true if all scene resources have been loaded
* TheApp.areResourcesLoaded(include_scenes) added to TheApp which will return true if all scene resources have been loaded, if include_scenes is true then all scenes will also be checked


v1.3.3
---------
* Updated comments and added examples
* Modified engine so that Box2D can be safely excluded if not needed
* TheApp now supports dynamic canvas calling to fit the canvas to the browsers client area, supports scale to fit to x-y axis or resize to client area, see TheApp.canvas_scale_method. TheApp.setCanvasScalingMethod can be used to change method
* Added new functions to TheApp, Scene and Actor that can dirty all transforms and force an update
* TheApp now stores canvas size (canvas_width, canvas_height), display size (display_width, display_height), canvas scale and centre points and device pixel ratio (pixel_ratio)
* TheApPp now has touch_supported property that  is set to true if touch is supported
* TheApp now has new property called dt which represents the time passed since the last frame was updated
* ImageAtlas generation now supports start x and y position which enables an image offset to be specified
* Xoml loader now supports text_align, text_baseline and fill_stye properties
* Added Actor._scale property
* Added Actor.changeParent(actor, parent) that enables actors to be moved from one parent to another
* Added Actor.findFirstParent() which finds the first Actor based parent
* Added Actor.transformPoint() that ca be used to transform a point into the actors coordinate system
* ParticleActor.add() has a 5th parameter called orphaned, if set to true then the particle will be added to the scene and not the particle actor


v1.3
---------
* Added more comments
* Actor setters now only dirty transform if a change is made
* Actor.findActorDeep() removed
* Actor.findActor() has additional parameter that allows recursive searching
* Actor.sendToBack() added
* Actor.addFixture() now returns the created fixture
* Actor.addJoint() now returns the created joint
* Scenes now active property which can be used to pause processing
* Scenes will now still be processed when not visible
* Scene.findActorDeep() removed
* Scene.findActor() has additional parameter that allows recursive searching
* Scene.sendToBack() added

v1.2
---------
* GSAP dependency removed
* JQuery dependency removed
* Support for actor hierarchies added
* Support for physics joints added to actors
* Opacity for actors and scenes added
* Actors now support 3D depth property
* Actors now have support for onCreate and onDestroy event handlers
* Actors now support box, circle and polygon shaped fixtures
* Fixtures can now be marked as sensors
* Actors and Scenes can now clip their children against box, circle and polygon cliopping shapes
* Actors and Scenes now have separate active and visible states
* Actors now have a simple physics system that is used on Actors that are not under control of Box2D
* Actors can be docked to the edged of the display as well as to the edges of canvas actors
* Actors can now ignore scene camera movement
* Actors now support onCollisionStart and onCollisionEnd events
* Child actors can now bubble events up to parents
* Scene camera can track actors
* Scenes now support touch panning
* New actor types added:
  * ArcActor - Displays arcs / circles
  * CanvasActor - A UI actor that can arrange, scroll around and dock its content
  * ParticleActor - An actor that is a particle system
  * Polygon Actor - An actor that displays polygon shapes
  * RedctActor - An actor that displays rectangle shapes
* Support for timeline key frame based tween animations added
* Support for various types of resources added on a global or scene local level, including:
  * Shapes - Used by clipping and physics systems
  * Geometries - Used by rendering system to render geometries
  * Brushes - Used to create sprite atlases / bitmap animation
  * Sounds - used to play back audio
  * Materials - Used to define physics materials
* Full support for the Goji Editor added, including XOML loader
